name: CI & Release

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  # Build, Lint, Test, and produce a DMG artifact on main pushes
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode 15
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install dependencies
        run: |
          brew install node swiftlint swiftformat
          brew install create-dmg

      - name: Run SwiftLint
        run: swiftlint lint --strict

      - name: Check SwiftFormat
        run: swiftformat . --lint

      - name: Build Debug
        run: |
          xcodebuild \
            -scheme "BeeAway" \
            -configuration Debug \
            -destination 'platform=macOS' \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            clean build | xcpretty

      - name: Run Unit & UI Tests
        run: |
          xcodebuild \
            -scheme "BeeAway" \
            -configuration Debug \
            -destination 'platform=macOS' \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            test | xcpretty

      # On pushes to main, also build a DMG artifact
      - name: Build Release for DMG artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          SETTINGS=$(xcodebuild \
            -scheme "BeeAway" \
            -configuration Release \
            -destination 'platform=macOS' \
            -showBuildSettings)

          # Extract the CONFIGURATION_BUILD_DIR
          BUILD_DIR=$(echo "$SETTINGS" \
            | awk -F'= ' '/BUILD_DIR/ { print $2 }' \
            | head -1)
          
          echo "Products are in: $BUILD_DIR"
          
          xcodebuild \
            -scheme "BeeAway" \
            -configuration Release \
            -destination 'platform=macOS' \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            clean build | xcpretty
          mkdir -p dist
          cp -R "$BUILD_DIR/Release/BeeAway.app" dist/
          echo "Copied .app to dist/"
          
          create-dmg \
            --volname "BeeAway Installer" \
            --background "resources/dmg-background.png" \
            --icon "BeeAway.app" 120 120 \
            --app-drop-link 400 120 \
            --window-size 540 300 \
            dist/BeeAway-${{ github.run_id }}.dmg \
            dist/

      - name: Upload DMG Artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: BeeAway-dmg-${{ github.run_id }}
          path: dist/BeeAway-${{ github.run_id }}.dmg
          retention-days: 7

  # Release on annotated v* tags
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Generate CHANGELOG and bump version
        run: npm run release

      - name: Push changelog commit and tag
        run: |
          git push origin HEAD:${GITHUB_REF#refs/heads/} --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Xcode 15
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install create-dmg
        run: |
          brew install node
          npm install --global create-dmg

      - name: Build Release .app
        run: |
          xcodebuild \
            -scheme "BeeAway" \
            -configuration Release \
            -destination 'platform=macOS' \
            clean build \
            CODE_SIGN_IDENTITY="Developer ID Application: Your Name (TEAMID)" \
            | xcpretty

      - name: Copy `.app` to staging
        run: |
          mkdir -p dist
          cp -R build/Release/BeeAway.app dist/

      - name: Create DMG
        run: |
          create-dmg \
            --overwrite \
            --volname "BeeAway Installer" \
            --background "resources/dmg-background.png" \
            --icon "BeeAway.app" 120 120 \
            --icon "Applications" 400 120 \
            --window-size 540 300 \
            dist/BeeAway.app \
            dist/BeeAway-${{ github.ref_name }}.dmg

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload DMG to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: BeeAway-${{ github.ref_name }}.dmg
          asset_path: dist/BeeAway-${{ github.ref_name }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
